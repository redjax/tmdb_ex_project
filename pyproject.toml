[project]
name = "tmdb_ex_project"
version = "0.1"
description = "Example project to demonstrate different utilities when interacting with an API. Uses TMDB's API for examples: https://developer.themoviedb.org/reference/"
authors = [{ name = "None", email = "none@none.com" }]
dependencies = [
    "stackprinter>=0.2.10",
    "pydantic[dotenv]>=1.10.7",
    "msgpack>=1.0.5",
    "httpx>=0.24.1",
    "arrow>=1.2.3",
    "requests>=2.30.0",
    "requests-cache>=1.0.1",
    "sqlalchemy>=2.0.15",
    "psycopg2-binary>=2.9.6",
    "pyodbc>=4.0.39",
    "diskcache>=5.6.1",
    "redis>=4.5.5",
]
requires-python = ">=3.10"
license = { text = "MIT" }

## Add empty list of py-modules to allow for multiple top-level directories
[tool.setuptools]
py-modules = []

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.3.1",
    "ruff>=0.0.269",
    "black>=23.3.0",
    "pytest-xdist>=3.3.1",
    "pytest-vcr>=1.0.2",
    "notebook>=6.5.4",
    "jupyter>=1.0.0",
    "pandas>=2.0.2",
]

[tool.pdm.scripts]

## Format scripts
# Check only, don't fix
ruff = { cmd = "ruff check ." }
#  Check and fix
format = { cmd = "ruff check . --fix" }

## Start scripts
#  Run main app or script. Launches from app/
start = { shell = "cd app && pdm run python main.py" }

## Export requirement scripts
#  Export production requirements
export = { cmd = "pdm export --prod -o requirements.txt --without-hashes" }
#  Export only development requirements
export-dev = { cmd = "pdm export -d -o requirements.dev.txt --without-hashes" }
## Uncomment if/when using a CI group
# export-ci = {cmd = "pdm export -G ci -o requirements.ci.txt --without-hashes"}

## Pytest
test = { shell = "cd app && pdm run pytest -v -rAf --tb=line" }
test-all = { shell = "cd app && pdm run pytest -v -rAf --tb=line" }
